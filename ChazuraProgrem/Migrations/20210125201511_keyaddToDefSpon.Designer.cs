// <auto-generated />
using System;
using ChazuraProgram.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChazuraProgram.Migrations
{
    [DbContext(typeof(ChazuraContext))]
    [Migration("20210125201511_keyaddToDefSpon")]
    partial class keyaddToDefSpon
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("ChazuraProgram.Models.Completed", b =>
                {
                    b.Property<int>("CompId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ChazuraTimes")
                        .HasColumnType("int");

                    b.Property<int>("LimudChartId")
                        .HasColumnType("int");

                    b.Property<string>("LimudFinishedCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompId");

                    b.HasIndex("LimudChartId");

                    b.ToTable("Completeds");
                });

            modelBuilder.Entity("ChazuraProgram.Models.CustomLimud", b =>
                {
                    b.Property<int>("CustomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ChazuraTimes")
                        .HasColumnType("int");

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EmailNotify")
                        .HasColumnType("bit");

                    b.Property<string>("LimudString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CustomID");

                    b.HasIndex("UserId");

                    b.ToTable("Custom");
                });

            modelBuilder.Entity("ChazuraProgram.Models.DafimShas", b =>
                {
                    b.Property<string>("DafID")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("DafHebraw")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("DafNumber")
                        .HasColumnType("int");

                    b.Property<string>("MeshactaID")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("TwoSided")
                        .HasColumnType("bit");

                    b.HasKey("DafID");

                    b.HasIndex("MeshactaID");

                    b.ToTable("DafimShas");
                });

            modelBuilder.Entity("ChazuraProgram.Models.DatesChart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ChazurahType")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateStarted")
                        .HasColumnType("datetime2");

                    b.Property<string>("MeshactaID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID");

                    b.ToTable("DatesChart");
                });

            modelBuilder.Entity("ChazuraProgram.Models.DefaultSponsor", b =>
                {
                    b.Property<int>("DefaultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DescriptionElse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GetSponserType")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("DefaultId");

                    b.ToTable("DefaultSponsor");
                });

            modelBuilder.Entity("ChazuraProgram.Models.LimudChart", b =>
                {
                    b.Property<int>("ChartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ChazurahType")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateStarted")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EmailNotify")
                        .HasColumnType("bit");

                    b.Property<string>("MeshctaCode")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("YearsChazurah")
                        .HasColumnType("int");

                    b.HasKey("ChartId");

                    b.HasIndex("UserId");

                    b.ToTable("LimudChart");
                });

            modelBuilder.Entity("ChazuraProgram.Models.MeshctaShas", b =>
                {
                    b.Property<string>("MeshactaID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MeshachtaEngName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("MeshactaHebrawName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("StartsAtDaf")
                        .HasColumnType("int");

                    b.Property<int>("TotolDafim")
                        .HasColumnType("int");

                    b.HasKey("MeshactaID");

                    b.ToTable("MeshctaShas");
                });

            modelBuilder.Entity("ChazuraProgram.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BCN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CC_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CardType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCharged")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEnterd")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GetStatus")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentId");

                    b.HasIndex("UserId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("ChazuraProgram.Models.Shas1Sided", b =>
                {
                    b.Property<string>("AumidID")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("AumidHebraw")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("AumidNumber")
                        .HasColumnType("int");

                    b.Property<int>("DafNumber")
                        .HasColumnType("int");

                    b.Property<string>("MeshactaID")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("AumidID");

                    b.HasIndex("MeshactaID");

                    b.ToTable("Shas1Sided");
                });

            modelBuilder.Entity("ChazuraProgram.Models.ShasChazuraAumidData", b =>
                {
                    b.Property<int>("ChartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AumidID")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<int>("ChazuraTimes")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("MeshactaID")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ChartId");

                    b.HasIndex("AumidID");

                    b.HasIndex("MeshactaID");

                    b.ToTable("ShasChazuraAumidData");
                });

            modelBuilder.Entity("ChazuraProgram.Models.ShasChazuraData", b =>
                {
                    b.Property<int>("ChartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ChazuraTimes")
                        .HasColumnType("int");

                    b.Property<string>("DafID")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("MeshactaID")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ChartId");

                    b.HasIndex("DafID");

                    b.HasIndex("MeshactaID");

                    b.ToTable("ShasChazuraData");
                });

            modelBuilder.Entity("ChazuraProgram.Models.SponsorData", b =>
                {
                    b.Property<int>("SponsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionElse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GetSponserType")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SponsId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("UserId");

                    b.ToTable("Sponsors");
                });

            modelBuilder.Entity("ChazuraProgram.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SavedPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ChazuraProgram.Models.Completed", b =>
                {
                    b.HasOne("ChazuraProgram.Models.LimudChart", "LimudChart")
                        .WithMany("CompletedList")
                        .HasForeignKey("LimudChartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LimudChart");
                });

            modelBuilder.Entity("ChazuraProgram.Models.CustomLimud", b =>
                {
                    b.HasOne("ChazuraProgram.Models.User", "User")
                        .WithMany("CustomLimudim")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChazuraProgram.Models.DafimShas", b =>
                {
                    b.HasOne("ChazuraProgram.Models.MeshctaShas", "Meshacta")
                        .WithMany("ShasDafim")
                        .HasForeignKey("MeshactaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meshacta");
                });

            modelBuilder.Entity("ChazuraProgram.Models.LimudChart", b =>
                {
                    b.HasOne("ChazuraProgram.Models.User", "User")
                        .WithMany("LimudCharts")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChazuraProgram.Models.Payment", b =>
                {
                    b.HasOne("ChazuraProgram.Models.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChazuraProgram.Models.Shas1Sided", b =>
                {
                    b.HasOne("ChazuraProgram.Models.MeshctaShas", "Meshacta")
                        .WithMany("Shas1Sided")
                        .HasForeignKey("MeshactaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meshacta");
                });

            modelBuilder.Entity("ChazuraProgram.Models.ShasChazuraAumidData", b =>
                {
                    b.HasOne("ChazuraProgram.Models.Shas1Sided", "Aumid")
                        .WithMany("ChazuraCharts")
                        .HasForeignKey("AumidID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChazuraProgram.Models.MeshctaShas", "Meshacta")
                        .WithMany()
                        .HasForeignKey("MeshactaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aumid");

                    b.Navigation("Meshacta");
                });

            modelBuilder.Entity("ChazuraProgram.Models.ShasChazuraData", b =>
                {
                    b.HasOne("ChazuraProgram.Models.DafimShas", "Daf")
                        .WithMany("ChazuraCharts")
                        .HasForeignKey("DafID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChazuraProgram.Models.MeshctaShas", "Meshacta")
                        .WithMany("ChazuraCharts")
                        .HasForeignKey("MeshactaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Daf");

                    b.Navigation("Meshacta");
                });

            modelBuilder.Entity("ChazuraProgram.Models.SponsorData", b =>
                {
                    b.HasOne("ChazuraProgram.Models.Payment", "Payment")
                        .WithMany("Sponsors")
                        .HasForeignKey("PaymentId");

                    b.HasOne("ChazuraProgram.Models.User", "User")
                        .WithMany("Sponsors")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Payment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ChazuraProgram.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ChazuraProgram.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChazuraProgram.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ChazuraProgram.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ChazuraProgram.Models.DafimShas", b =>
                {
                    b.Navigation("ChazuraCharts");
                });

            modelBuilder.Entity("ChazuraProgram.Models.LimudChart", b =>
                {
                    b.Navigation("CompletedList");
                });

            modelBuilder.Entity("ChazuraProgram.Models.MeshctaShas", b =>
                {
                    b.Navigation("ChazuraCharts");

                    b.Navigation("Shas1Sided");

                    b.Navigation("ShasDafim");
                });

            modelBuilder.Entity("ChazuraProgram.Models.Payment", b =>
                {
                    b.Navigation("Sponsors");
                });

            modelBuilder.Entity("ChazuraProgram.Models.Shas1Sided", b =>
                {
                    b.Navigation("ChazuraCharts");
                });

            modelBuilder.Entity("ChazuraProgram.Models.User", b =>
                {
                    b.Navigation("CustomLimudim");

                    b.Navigation("LimudCharts");

                    b.Navigation("Payments");

                    b.Navigation("Sponsors");
                });
#pragma warning restore 612, 618
        }
    }
}
